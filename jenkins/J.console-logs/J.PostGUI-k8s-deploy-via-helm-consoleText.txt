Started by user A.Davarski
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/PostGUI-k8s-deploy-via-helm
[Pipeline] {
[Pipeline] timestamps
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone PostGUI Demo Repository)
[Pipeline] checkout
[2021-10-27T07:44:18.858Z] The recommended git tool is: NONE
[2021-10-27T07:44:18.859Z] using credential devops
[2021-10-27T07:44:18.883Z]  > git rev-parse --is-inside-work-tree # timeout=10
[2021-10-27T07:44:18.911Z] Fetching changes from the remote Git repository
[2021-10-27T07:44:18.912Z]  > git config remote.origin.url git@github.com:adavarski/PostGUI-k8s-demo.git # timeout=10
[2021-10-27T07:44:18.930Z] Fetching upstream changes from git@github.com:adavarski/PostGUI-k8s-demo.git
[2021-10-27T07:44:18.930Z]  > git --version # timeout=10
[2021-10-27T07:44:18.938Z]  > git --version # 'git version 2.17.1'
[2021-10-27T07:44:18.939Z] using GIT_SSH to set credentials Github devops 
[2021-10-27T07:44:18.956Z]  > git fetch --tags --progress -- git@github.com:adavarski/PostGUI-k8s-demo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
[2021-10-27T07:44:20.687Z]  > git rev-parse origin/main^{commit} # timeout=10
[2021-10-27T07:44:20.694Z] Checking out Revision cc3194d076e4eeb0103defa6f6946e9fd029000d (origin/main)
[2021-10-27T07:44:20.694Z]  > git config core.sparsecheckout # timeout=10
[2021-10-27T07:44:20.697Z]  > git checkout -f cc3194d076e4eeb0103defa6f6946e9fd029000d # timeout=10
[2021-10-27T07:44:20.715Z] Commit message: "Update Jenkinsfile-PostGUI-k8s-deploy-via-manifests-only"
[2021-10-27T07:44:20.715Z] First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Postgres & PostgREST via k8s manifests)
[Pipeline] dir
[2021-10-27T07:44:21.028Z] Running in /var/lib/jenkins/workspace/PostGUI-k8s-deploy-via-helm/postgui/k8s/k8s-manifests
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
[2021-10-27T07:44:21.622Z] + kubectl apply -f postgres-deployment.yaml -f postgres-service.yaml -f postgrest-deployment.yaml -f postgrest-service.yaml
[2021-10-27T07:44:22.534Z] deployment.apps/postgres created
[2021-10-27T07:44:22.534Z] service/postgres created
[2021-10-27T07:44:22.534Z] deployment.apps/postgrest created
[2021-10-27T07:44:22.534Z] service/postgrest created
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy PostGUI via k8s Helm Chart)
[Pipeline] dir
[2021-10-27T07:44:23.004Z] Running in /var/lib/jenkins/workspace/PostGUI-k8s-deploy-via-helm/postgui/k8s/helm
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
[2021-10-27T07:44:23.428Z] + helm upgrade --install postgui postgui
[2021-10-27T07:44:23.688Z] WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /var/lib/jenkins/.kube/k3s.yaml
[2021-10-27T07:44:23.688Z] WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /var/lib/jenkins/.kube/k3s.yaml
[2021-10-27T07:44:23.688Z] Release "postgui" does not exist. Installing it now.
[2021-10-27T07:44:25.032Z] NAME: postgui
[2021-10-27T07:44:25.032Z] LAST DEPLOYED: Wed Oct 27 10:44:24 2021
[2021-10-27T07:44:25.032Z] NAMESPACE: default
[2021-10-27T07:44:25.032Z] STATUS: deployed
[2021-10-27T07:44:25.032Z] REVISION: 1
[2021-10-27T07:44:25.032Z] NOTES:
[2021-10-27T07:44:25.032Z] 1. Get the application URL by running these commands:
[2021-10-27T07:44:25.032Z]   export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=postgui,app.kubernetes.io/instance=postgui" -o jsonpath="{.items[0].metadata.name}")
[2021-10-27T07:44:25.032Z]   export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
[2021-10-27T07:44:25.032Z]   echo "Visit http://127.0.0.1:8080 to use your application"
[2021-10-27T07:44:25.032Z]   kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
