Started by user A.Davarski
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/PostGUI-build
[Pipeline] {
[Pipeline] timestamps
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone PostGUI Demo Repository)
[Pipeline] checkout
[2021-10-27T05:56:12.310Z] The recommended git tool is: NONE
[2021-10-27T05:56:12.311Z] using credential devops
[2021-10-27T05:56:12.323Z]  > git rev-parse --is-inside-work-tree # timeout=10
[2021-10-27T05:56:12.335Z] Fetching changes from the remote Git repository
[2021-10-27T05:56:12.335Z]  > git config remote.origin.url git@github.com:adavarski/PostGUI-k8s-demo.git # timeout=10
[2021-10-27T05:56:12.354Z] Fetching upstream changes from git@github.com:adavarski/PostGUI-k8s-demo.git
[2021-10-27T05:56:12.354Z]  > git --version # timeout=10
[2021-10-27T05:56:12.361Z]  > git --version # 'git version 2.17.1'
[2021-10-27T05:56:12.361Z] using GIT_SSH to set credentials Github devops 
[2021-10-27T05:56:12.365Z]  > git fetch --tags --progress -- git@github.com:adavarski/PostGUI-k8s-demo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
[2021-10-27T05:56:17.183Z]  > git rev-parse origin/main^{commit} # timeout=10
[2021-10-27T05:56:17.189Z] Checking out Revision c70868a00445f75fcf8a978fc0b825826c35e82e (origin/main)
[2021-10-27T05:56:17.189Z]  > git config core.sparsecheckout # timeout=10
[2021-10-27T05:56:17.195Z]  > git checkout -f c70868a00445f75fcf8a978fc0b825826c35e82e # timeout=10
[2021-10-27T05:56:17.203Z] Commit message: "Update Jenkinsfile-build-postgui"
[2021-10-27T05:56:17.203Z] First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build PostGUI docker image)
[Pipeline] dir
[2021-10-27T05:56:17.400Z] Running in /var/lib/jenkins/workspace/PostGUI-build/postgui/postgui-docker
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
[2021-10-27T05:56:17.967Z] + docker build -t davarski/postgui .
[2021-10-27T05:56:17.967Z] Sending build context to Docker daemon   1.39MB

[2021-10-27T05:56:17.967Z] Step 1/9 : FROM node:16
[2021-10-27T05:56:17.967Z]  ---> 3b66eb585643
[2021-10-27T05:56:17.967Z] Step 2/9 : RUN apt update
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> dd18802cf0d5
[2021-10-27T05:56:17.967Z] Step 3/9 : WORKDIR /app
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> 30e1958e5e14
[2021-10-27T05:56:17.967Z] Step 4/9 : COPY package.json .
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> 97afef6bf5ce
[2021-10-27T05:56:17.967Z] Step 5/9 : RUN npm install
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> 59fb845342c4
[2021-10-27T05:56:17.967Z] Step 6/9 : COPY . .
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> cf63f591a22f
[2021-10-27T05:56:17.967Z] Step 7/9 : USER node
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> 6f03ecf56423
[2021-10-27T05:56:17.967Z] Step 8/9 : EXPOSE 8771
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> 99ac691b62e5
[2021-10-27T05:56:17.967Z] Step 9/9 : CMD [ "npm", "start"]
[2021-10-27T05:56:17.967Z]  ---> Using cache
[2021-10-27T05:56:17.967Z]  ---> 64d8f5f5bf89
[2021-10-27T05:56:17.968Z] Successfully built 64d8f5f5bf89
[2021-10-27T05:56:17.968Z] Successfully tagged davarski/postgui:latest
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push PostGUI docker image to DockerHub)
[Pipeline] dir
[2021-10-27T05:56:18.263Z] Running in /var/lib/jenkins/workspace/PostGUI-build/postgui/postgui-docker
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withDockerRegistry
[2021-10-27T05:56:18.429Z] Using the existing docker config file.Removing blacklisted property: auths$ docker login -u davarski -p ******** https://index.docker.io/v1/
[2021-10-27T05:56:18.501Z] WARNING! Using --password via the CLI is insecure. Use --password-stdin.
[2021-10-27T05:56:22.235Z] WARNING! Your password will be stored unencrypted in /var/lib/jenkins/workspace/PostGUI-build/postgui/postgui-docker@tmp/24710fa5-c258-4d62-a8ff-6c24e5ad2467/config.json.
[2021-10-27T05:56:22.236Z] Configure a credential helper to remove this warning. See
[2021-10-27T05:56:22.236Z] https://docs.docker.com/engine/reference/commandline/login/#credentials-store
[2021-10-27T05:56:22.236Z] 
[2021-10-27T05:56:22.236Z] Login Succeeded
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
[2021-10-27T05:56:22.567Z] + docker tag davarski/postgui davarski/postgui:1.0
[Pipeline] isUnix
[Pipeline] sh
[2021-10-27T05:56:22.870Z] + docker push davarski/postgui:1.0
[2021-10-27T05:56:22.871Z] The push refers to repository [docker.io/davarski/postgui]
[2021-10-27T05:56:26.102Z] 205bfb88d27b: Preparing
[2021-10-27T05:56:26.102Z] ab0d12997671: Preparing
[2021-10-27T05:56:26.102Z] 1be37e30c93d: Preparing
[2021-10-27T05:56:26.102Z] a6881484b16b: Preparing
[2021-10-27T05:56:26.102Z] f631681fe409: Preparing
[2021-10-27T05:56:26.102Z] c0df126019a7: Preparing
[2021-10-27T05:56:26.102Z] be5907a29722: Preparing
[2021-10-27T05:56:26.102Z] 4c3ac155f9ef: Preparing
[2021-10-27T05:56:26.102Z] dd3e4be546bd: Preparing
[2021-10-27T05:56:26.102Z] 9e28eabfde8b: Preparing
[2021-10-27T05:56:26.102Z] 52ed97b6b9c6: Preparing
[2021-10-27T05:56:26.102Z] 2ff7f567e600: Preparing
[2021-10-27T05:56:26.102Z] 42aff4deb538: Preparing
[2021-10-27T05:56:26.102Z] d6a325d281f2: Preparing
[2021-10-27T05:56:26.102Z] be5907a29722: Waiting
[2021-10-27T05:56:26.102Z] 52ed97b6b9c6: Waiting
[2021-10-27T05:56:26.102Z] 4c3ac155f9ef: Waiting
[2021-10-27T05:56:26.102Z] dd3e4be546bd: Waiting
[2021-10-27T05:56:26.102Z] 2ff7f567e600: Waiting
[2021-10-27T05:56:26.102Z] 9e28eabfde8b: Waiting
[2021-10-27T05:56:26.102Z] d6a325d281f2: Waiting
[2021-10-27T05:56:26.102Z] c0df126019a7: Waiting
[2021-10-27T05:56:30.228Z] ab0d12997671: Layer already exists
[2021-10-27T05:56:30.228Z] f631681fe409: Layer already exists
[2021-10-27T05:56:30.228Z] 1be37e30c93d: Layer already exists
[2021-10-27T05:56:30.228Z] 205bfb88d27b: Layer already exists
[2021-10-27T05:56:30.228Z] a6881484b16b: Layer already exists
[2021-10-27T05:56:31.140Z] 4c3ac155f9ef: Layer already exists
[2021-10-27T05:56:31.140Z] be5907a29722: Layer already exists
[2021-10-27T05:56:31.140Z] c0df126019a7: Layer already exists
[2021-10-27T05:56:31.141Z] dd3e4be546bd: Layer already exists
[2021-10-27T05:56:32.487Z] 9e28eabfde8b: Layer already exists
[2021-10-27T05:56:36.613Z] 42aff4deb538: Layer already exists
[2021-10-27T05:56:36.613Z] 52ed97b6b9c6: Layer already exists
[2021-10-27T05:56:36.613Z] d6a325d281f2: Layer already exists
[2021-10-27T05:56:36.613Z] 2ff7f567e600: Layer already exists
[2021-10-27T05:56:39.843Z] 1.0: digest: sha256:5836f3ba08dfc69f3d0c5fad6293f97c878ae6468ea28ee6d93b413db90e1141 size: 3263
[Pipeline] isUnix
[Pipeline] sh
[2021-10-27T05:56:40.176Z] + docker tag davarski/postgui davarski/postgui:latest
[Pipeline] isUnix
[Pipeline] sh
[2021-10-27T05:56:40.489Z] + docker push davarski/postgui:latest
[2021-10-27T05:56:40.489Z] The push refers to repository [docker.io/davarski/postgui]
[2021-10-27T05:56:41.837Z] 205bfb88d27b: Preparing
[2021-10-27T05:56:41.837Z] ab0d12997671: Preparing
[2021-10-27T05:56:41.837Z] 1be37e30c93d: Preparing
[2021-10-27T05:56:41.837Z] a6881484b16b: Preparing
[2021-10-27T05:56:41.837Z] f631681fe409: Preparing
[2021-10-27T05:56:41.837Z] c0df126019a7: Preparing
[2021-10-27T05:56:41.837Z] be5907a29722: Preparing
[2021-10-27T05:56:41.837Z] 4c3ac155f9ef: Preparing
[2021-10-27T05:56:41.837Z] dd3e4be546bd: Preparing
[2021-10-27T05:56:41.837Z] 9e28eabfde8b: Preparing
[2021-10-27T05:56:41.837Z] 52ed97b6b9c6: Preparing
[2021-10-27T05:56:41.837Z] 2ff7f567e600: Preparing
[2021-10-27T05:56:41.837Z] 42aff4deb538: Preparing
[2021-10-27T05:56:41.837Z] d6a325d281f2: Preparing
[2021-10-27T05:56:41.837Z] c0df126019a7: Waiting
[2021-10-27T05:56:41.837Z] be5907a29722: Waiting
[2021-10-27T05:56:41.837Z] 4c3ac155f9ef: Waiting
[2021-10-27T05:56:41.837Z] 2ff7f567e600: Waiting
[2021-10-27T05:56:41.837Z] 42aff4deb538: Waiting
[2021-10-27T05:56:41.837Z] dd3e4be546bd: Waiting
[2021-10-27T05:56:41.837Z] 9e28eabfde8b: Waiting
[2021-10-27T05:56:41.837Z] 52ed97b6b9c6: Waiting
[2021-10-27T05:56:41.837Z] d6a325d281f2: Waiting
[2021-10-27T05:56:47.038Z] 1be37e30c93d: Layer already exists
[2021-10-27T05:56:47.038Z] a6881484b16b: Layer already exists
[2021-10-27T05:56:47.039Z] 205bfb88d27b: Layer already exists
[2021-10-27T05:56:47.039Z] f631681fe409: Layer already exists
[2021-10-27T05:56:47.039Z] ab0d12997671: Layer already exists
[2021-10-27T05:56:47.290Z] be5907a29722: Layer already exists
[2021-10-27T05:56:47.290Z] 9e28eabfde8b: Layer already exists
[2021-10-27T05:56:47.290Z] c0df126019a7: Layer already exists
[2021-10-27T05:56:47.290Z] dd3e4be546bd: Layer already exists
[2021-10-27T05:56:47.542Z] 4c3ac155f9ef: Layer already exists
[2021-10-27T05:56:48.886Z] 2ff7f567e600: Layer already exists
[2021-10-27T05:56:48.886Z] d6a325d281f2: Layer already exists
[2021-10-27T05:56:48.886Z] 52ed97b6b9c6: Layer already exists
[2021-10-27T05:56:48.886Z] 42aff4deb538: Layer already exists
[2021-10-27T05:56:53.015Z] latest: digest: sha256:5836f3ba08dfc69f3d0c5fad6293f97c878ae6468ea28ee6d93b413db90e1141 size: 3263
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
